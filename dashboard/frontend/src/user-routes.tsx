// THIS FILE IS AUTOGENERATED WHEN PAGES ARE UPDATED
import { lazy, useCallback, startTransition } from "react";
import { RouteObject } from "react-router";
import { SuspenseWrapper } from "./router";
import { useNavigate } from "react-router-dom";

const AnomalyPage = lazy(() => import("./pages/AnomalyPage.tsx"));
const App = lazy(() => import("./pages/App.tsx"));
const VisualizationPage = lazy(() => import("./pages/VisualizationPage.tsx"));

// Helper for navigation with startTransition
export const useTransitionNavigate = () => {
  const navigate = useNavigate();
  
  return useCallback((to: string) => {
    // Use React 18's startTransition to avoid suspension during navigation
    startTransition(() => {
      navigate(to);
    });
  }, [navigate]);
};
// Helper for wrapping routes with error boundaries
import ErrorBoundary from "./components/ErrorBoundary";

const withErrorBoundary = (Component: React.ComponentType) => (
  <ErrorBoundary>
    <SuspenseWrapper>
      <Component />
    </SuspenseWrapper>
  </ErrorBoundary>
);

export const userRoutes: RouteObject[] = [
	{
		path: "/anomaly-page",
		element: withErrorBoundary(AnomalyPage)
	},
	{
		path: "/anomalypage",
		element: withErrorBoundary(AnomalyPage)
	},
	{
		path: "/",
		element: withErrorBoundary(App)
	},
	{
		path: "/visualization-page",
		element: withErrorBoundary(VisualizationPage)
	},
	{
		path: "/visualizationpage",
		element: withErrorBoundary(VisualizationPage)
	},
];
